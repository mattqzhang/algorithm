/*
Find the Difference
You are given two strings s and t.
String t is generated by random shuffling string s and then add one more letter at a random position.
Return the letter that was added to t.

lc 389
https://leetcode.com/problems/find-the-difference/description/
*/

    // using bucket sort
    //  we can also use hashmap of <char, ct> with similar algorithm
    public char findTheDifference(String s, String t) {
        if (s.length() == 0) return t.charAt(0);
        char[] bucket = new char[26];
        for (int i=0; i<s.length(); i++) {
            bucket[s.charAt(i) - 'a'] ++;
        }
        for (int i=0; i<t.length(); i++) {
            if (bucket[t.charAt(i) - 'a'] == 0)
                return t.charAt(i);
            bucket[t.charAt(i) - 'a'] --;
        }
        return '0';        
    }


    // most simple algorithm using xor
     
       public char findTheDifference(String s, String t) {
        if (s.length() == 0) return t.charAt(0);

        char c = s.charAt(0);
        for (int i=1; i<s.length(); i++) {
            c ^= s.charAt(i);
        }
        for (int i=0; i<t.length(); i++) {
            c ^= t.charAt(i);
        }
        return c;
    }
